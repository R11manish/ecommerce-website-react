{"ast":null,"code":"/*globals define, module, Symbol, Map, Set */\n\n/*jshint -W056 */\n(function (globals) {\n  'use strict';\n\n  var messages, predicates, functions, assert, not, maybe, collections, hasOwnProperty, toString, keys, slice, isArray, neginf, posinf, haveSymbols, haveMaps, haveSets;\n  messages = {};\n  predicates = {};\n  [{\n    n: 'equal',\n    f: equal,\n    s: 'equal {e}'\n  }, {\n    n: 'undefined',\n    f: isUndefined,\n    s: 'be undefined'\n  }, {\n    n: 'null',\n    f: isNull,\n    s: 'be null'\n  }, {\n    n: 'assigned',\n    f: assigned,\n    s: 'be assigned'\n  }, {\n    n: 'primitive',\n    f: primitive,\n    s: 'be primitive type'\n  }, {\n    n: 'contains',\n    f: contains,\n    s: 'contain {e}'\n  }, {\n    n: 'in',\n    f: isIn,\n    s: 'be in {e}'\n  }, {\n    n: 'containsKey',\n    f: containsKey,\n    s: 'contain key {e}'\n  }, {\n    n: 'keyIn',\n    f: keyIn,\n    s: 'be key in {e}'\n  }, {\n    n: 'zero',\n    f: zero,\n    s: 'be 0'\n  }, {\n    n: 'one',\n    f: one,\n    s: 'be 1'\n  }, {\n    n: 'infinity',\n    f: infinity,\n    s: 'be infinity'\n  }, {\n    n: 'number',\n    f: number,\n    s: 'be Number'\n  }, {\n    n: 'integer',\n    f: integer,\n    s: 'be integer'\n  }, {\n    n: 'float',\n    f: float,\n    s: 'be non-integer number'\n  }, {\n    n: 'even',\n    f: even,\n    s: 'be even number'\n  }, {\n    n: 'odd',\n    f: odd,\n    s: 'be odd number'\n  }, {\n    n: 'greater',\n    f: greater,\n    s: 'be greater than {e}'\n  }, {\n    n: 'less',\n    f: less,\n    s: 'be less than {e}'\n  }, {\n    n: 'between',\n    f: between,\n    s: 'be between {e} and {e2}'\n  }, {\n    n: 'greaterOrEqual',\n    f: greaterOrEqual,\n    s: 'be greater than or equal to {e}'\n  }, {\n    n: 'lessOrEqual',\n    f: lessOrEqual,\n    s: 'be less than or equal to {e}'\n  }, {\n    n: 'inRange',\n    f: inRange,\n    s: 'be in the range {e} to {e2}'\n  }, {\n    n: 'positive',\n    f: positive,\n    s: 'be positive number'\n  }, {\n    n: 'negative',\n    f: negative,\n    s: 'be negative number'\n  }, {\n    n: 'string',\n    f: string,\n    s: 'be String'\n  }, {\n    n: 'emptyString',\n    f: emptyString,\n    s: 'be empty string'\n  }, {\n    n: 'nonEmptyString',\n    f: nonEmptyString,\n    s: 'be non-empty string'\n  }, {\n    n: 'match',\n    f: match,\n    s: 'match {e}'\n  }, {\n    n: 'boolean',\n    f: boolean,\n    s: 'be Boolean'\n  }, {\n    n: 'object',\n    f: object,\n    s: 'be Object'\n  }, {\n    n: 'emptyObject',\n    f: emptyObject,\n    s: 'be empty object'\n  }, {\n    n: 'nonEmptyObject',\n    f: nonEmptyObject,\n    s: 'be non-empty object'\n  }, {\n    n: 'instanceStrict',\n    f: instanceStrict,\n    s: 'be instanceof {t}'\n  }, {\n    n: 'thenable',\n    f: thenable,\n    s: 'be promise-like'\n  }, {\n    n: 'instance',\n    f: instance,\n    s: 'be {t}'\n  }, {\n    n: 'like',\n    f: like,\n    s: 'be like {e}'\n  }, {\n    n: 'array',\n    f: array,\n    s: 'be Array'\n  }, {\n    n: 'emptyArray',\n    f: emptyArray,\n    s: 'be empty array'\n  }, {\n    n: 'nonEmptyArray',\n    f: nonEmptyArray,\n    s: 'be non-empty array'\n  }, {\n    n: 'arrayLike',\n    f: arrayLike,\n    s: 'be array-like'\n  }, {\n    n: 'iterable',\n    f: iterable,\n    s: 'be iterable'\n  }, {\n    n: 'date',\n    f: date,\n    s: 'be valid Date'\n  }, {\n    n: 'function',\n    f: isFunction,\n    s: 'be Function'\n  }, {\n    n: 'hasLength',\n    f: hasLength,\n    s: 'have length {e}'\n  }, {\n    n: 'throws',\n    f: throws,\n    s: 'throw'\n  }].map(function (data) {\n    var n = data.n;\n    messages[n] = 'assert failed: expected {a} to ' + data.s;\n    predicates[n] = data.f;\n  });\n  functions = {\n    map: map,\n    all: all,\n    any: any\n  };\n  collections = ['array', 'arrayLike', 'iterable', 'object'];\n  hasOwnProperty = Object.prototype.hasOwnProperty;\n  toString = Object.prototype.toString;\n  keys = Object.keys;\n  slice = Array.prototype.slice;\n  isArray = Array.isArray;\n  neginf = Number.NEGATIVE_INFINITY;\n  posinf = Number.POSITIVE_INFINITY;\n  haveSymbols = typeof Symbol === 'function';\n  haveMaps = typeof Map === 'function';\n  haveSets = typeof Set === 'function';\n  functions = mixin(functions, predicates);\n  assert = createModifiedPredicates(assertModifier, assertImpl);\n  not = createModifiedPredicates(notModifier, notImpl);\n  maybe = createModifiedPredicates(maybeModifier, maybeImpl);\n  assert.not = createModifiedModifier(assertModifier, not, 'not ');\n  assert.maybe = createModifiedModifier(assertModifier, maybe, 'maybe ');\n  collections.forEach(createOfPredicates);\n  createOfModifiers(assert, assertModifier);\n  createOfModifiers(not, notModifier);\n  collections.forEach(createMaybeOfModifiers);\n  exportFunctions(mixin(functions, {\n    assert: assert,\n    not: not,\n    maybe: maybe\n  }));\n  /**\n   * Public function `equal`.\n   *\n   * Returns true if `lhs` and `rhs` are strictly equal, without coercion.\n   * Returns false otherwise.\n   */\n\n  function equal(lhs, rhs) {\n    return lhs === rhs;\n  }\n  /**\n   * Public function `undefined`.\n   *\n   * Returns true if `data` is undefined, false otherwise.\n   */\n\n\n  function isUndefined(data) {\n    return data === undefined;\n  }\n  /**\n   * Public function `null`.\n   *\n   * Returns true if `data` is null, false otherwise.\n   */\n\n\n  function isNull(data) {\n    return data === null;\n  }\n  /**\n   * Public function `assigned`.\n   *\n   * Returns true if `data` is not null or undefined, false otherwise.\n   */\n\n\n  function assigned(data) {\n    return data !== undefined && data !== null;\n  }\n  /**\n   * Public function `primitive`.\n   *\n   * Returns true if `data` is a primitive type, false otherwise.\n   */\n\n\n  function primitive(data) {\n    var type;\n\n    switch (data) {\n      case null:\n      case undefined:\n      case false:\n      case true:\n        return true;\n    }\n\n    type = typeof data;\n    return type === 'string' || type === 'number' || haveSymbols && type === 'symbol';\n  }\n  /**\n   * Public function `zero`.\n   *\n   * Returns true if `data` is zero, false otherwise.\n   */\n\n\n  function zero(data) {\n    return data === 0;\n  }\n  /**\n   * Public function `one`.\n   *\n   * Returns true if `data` is one, false otherwise.\n   */\n\n\n  function one(data) {\n    return data === 1;\n  }\n  /**\n   * Public function `infinity`.\n   *\n   * Returns true if `data` is positive or negative infinity, false otherwise.\n   */\n\n\n  function infinity(data) {\n    return data === neginf || data === posinf;\n  }\n  /**\n   * Public function `number`.\n   *\n   * Returns true if `data` is a number, false otherwise.\n   */\n\n\n  function number(data) {\n    return typeof data === 'number' && data > neginf && data < posinf;\n  }\n  /**\n   * Public function `integer`.\n   *\n   * Returns true if `data` is an integer, false otherwise.\n   */\n\n\n  function integer(data) {\n    return typeof data === 'number' && data % 1 === 0;\n  }\n  /**\n   * Public function `float`.\n   *\n   * Returns true if `data` is a non-integer number, false otherwise.\n   */\n\n\n  function float(data) {\n    return number(data) && data % 1 !== 0;\n  }\n  /**\n   * Public function `even`.\n   *\n   * Returns true if `data` is an even number, false otherwise.\n   */\n\n\n  function even(data) {\n    return typeof data === 'number' && data % 2 === 0;\n  }\n  /**\n   * Public function `odd`.\n   *\n   * Returns true if `data` is an odd number, false otherwise.\n   */\n\n\n  function odd(data) {\n    return integer(data) && data % 2 !== 0;\n  }\n  /**\n   * Public function `greater`.\n   *\n   * Returns true if `lhs` is a number greater than `rhs`, false otherwise.\n   */\n\n\n  function greater(lhs, rhs) {\n    return number(lhs) && lhs > rhs;\n  }\n  /**\n   * Public function `less`.\n   *\n   * Returns true if `lhs` is a number less than `rhs`, false otherwise.\n   */\n\n\n  function less(lhs, rhs) {\n    return number(lhs) && lhs < rhs;\n  }\n  /**\n   * Public function `between`.\n   *\n   * Returns true if `data` is a number between `x` and `y`, false otherwise.\n   */\n\n\n  function between(data, x, y) {\n    if (x < y) {\n      return greater(data, x) && data < y;\n    }\n\n    return less(data, x) && data > y;\n  }\n  /**\n   * Public function `greaterOrEqual`.\n   *\n   * Returns true if `lhs` is a number greater than or equal to `rhs`, false\n   * otherwise.\n   */\n\n\n  function greaterOrEqual(lhs, rhs) {\n    return number(lhs) && lhs >= rhs;\n  }\n  /**\n   * Public function `lessOrEqual`.\n   *\n   * Returns true if `lhs` is a number less than or equal to `rhs`, false\n   * otherwise.\n   */\n\n\n  function lessOrEqual(lhs, rhs) {\n    return number(lhs) && lhs <= rhs;\n  }\n  /**\n   * Public function `inRange`.\n   *\n   * Returns true if `data` is a number in the range `x..y`, false otherwise.\n   */\n\n\n  function inRange(data, x, y) {\n    if (x < y) {\n      return greaterOrEqual(data, x) && data <= y;\n    }\n\n    return lessOrEqual(data, x) && data >= y;\n  }\n  /**\n   * Public function `positive`.\n   *\n   * Returns true if `data` is a positive number, false otherwise.\n   */\n\n\n  function positive(data) {\n    return greater(data, 0);\n  }\n  /**\n   * Public function `negative`.\n   *\n   * Returns true if `data` is a negative number, false otherwise.\n   */\n\n\n  function negative(data) {\n    return less(data, 0);\n  }\n  /**\n   * Public function `string`.\n   *\n   * Returns true if `data` is a string, false otherwise.\n   */\n\n\n  function string(data) {\n    return typeof data === 'string';\n  }\n  /**\n   * Public function `emptyString`.\n   *\n   * Returns true if `data` is the empty string, false otherwise.\n   */\n\n\n  function emptyString(data) {\n    return data === '';\n  }\n  /**\n   * Public function `nonEmptyString`.\n   *\n   * Returns true if `data` is a non-empty string, false otherwise.\n   */\n\n\n  function nonEmptyString(data) {\n    return string(data) && data !== '';\n  }\n  /**\n   * Public function `match`.\n   *\n   * Returns true if `data` is a string that matches `regex`, false otherwise.\n   */\n\n\n  function match(data, regex) {\n    return string(data) && !!data.match(regex);\n  }\n  /**\n   * Public function `boolean`.\n   *\n   * Returns true if `data` is a boolean value, false otherwise.\n   */\n\n\n  function boolean(data) {\n    return data === false || data === true;\n  }\n  /**\n   * Public function `object`.\n   *\n   * Returns true if `data` is a plain-old JS object, false otherwise.\n   */\n\n\n  function object(data) {\n    return toString.call(data) === '[object Object]';\n  }\n  /**\n   * Public function `emptyObject`.\n   *\n   * Returns true if `data` is an empty object, false otherwise.\n   */\n\n\n  function emptyObject(data) {\n    return object(data) && !some(data, function () {\n      return true;\n    });\n  }\n\n  function some(data, predicate) {\n    for (var key in data) {\n      if (hasOwnProperty.call(data, key)) {\n        if (predicate(key, data[key])) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n  /**\n   * Public function `nonEmptyObject`.\n   *\n   * Returns true if `data` is a non-empty object, false otherwise.\n   */\n\n\n  function nonEmptyObject(data) {\n    return object(data) && some(data, function () {\n      return true;\n    });\n  }\n  /**\n   * Public function `thenable`.\n   *\n   * Returns true if `data` has a `then` method.\n   */\n\n\n  function thenable(data) {\n    return assigned(data) && isFunction(data.then);\n  }\n  /**\n   * Public function `instanceStrict`.\n   *\n   * Returns true if `data` is an instance of `prototype`, false otherwise.\n   */\n\n\n  function instanceStrict(data, prototype) {\n    try {\n      return data instanceof prototype;\n    } catch (error) {\n      return false;\n    }\n  }\n  /**\n   * Public function `instance`.\n   *\n   * Returns true if `data` is an instance of `prototype`, false otherwise.\n   * Falls back to testing constructor.name and Object.prototype.toString\n   * if the initial instanceof test fails.\n   */\n\n\n  function instance(data, prototype) {\n    try {\n      return instanceStrict(data, prototype) || data.constructor.name === prototype.name || toString.call(data) === '[object ' + prototype.name + ']';\n    } catch (error) {\n      return false;\n    }\n  }\n  /**\n   * Public function `like`.\n   *\n   * Tests whether `data` 'quacks like a duck'. Returns true if `data` has all\n   * of the properties of `archetype` (the 'duck'), false otherwise.\n   */\n\n\n  function like(data, archetype) {\n    var name;\n\n    for (name in archetype) {\n      if (hasOwnProperty.call(archetype, name)) {\n        if (hasOwnProperty.call(data, name) === false || typeof data[name] !== typeof archetype[name]) {\n          return false;\n        }\n\n        if (object(data[name]) && like(data[name], archetype[name]) === false) {\n          return false;\n        }\n      }\n    }\n\n    return true;\n  }\n  /**\n   * Public function `array`.\n   *\n   * Returns true if `data` is an array, false otherwise.\n   */\n\n\n  function array(data) {\n    return isArray(data);\n  }\n  /**\n   * Public function `emptyArray`.\n   *\n   * Returns true if `data` is an empty array, false otherwise.\n   */\n\n\n  function emptyArray(data) {\n    return isArray(data) && data.length === 0;\n  }\n  /**\n   * Public function `nonEmptyArray`.\n   *\n   * Returns true if `data` is a non-empty array, false otherwise.\n   */\n\n\n  function nonEmptyArray(data) {\n    return isArray(data) && data.length > 0;\n  }\n  /**\n   * Public function `arrayLike`.\n   *\n   * Returns true if `data` is an array-like object, false otherwise.\n   */\n\n\n  function arrayLike(data) {\n    return assigned(data) && data.length >= 0;\n  }\n  /**\n   * Public function `iterable`.\n   *\n   * Returns true if `data` is an iterable, false otherwise.\n   */\n\n\n  function iterable(data) {\n    if (!haveSymbols) {\n      // Fall back to `arrayLike` predicate in pre-ES6 environments.\n      return arrayLike(data);\n    }\n\n    return assigned(data) && isFunction(data[Symbol.iterator]);\n  }\n  /**\n   * Public function `contains`.\n   *\n   * Returns true if `data` contains `value`, false otherwise.\n   * Works with objects, arrays and array-likes (including strings).\n   */\n\n\n  function contains(data, value) {\n    var iterator, iteration;\n\n    if (!assigned(data)) {\n      return false;\n    }\n\n    if (haveSets && instanceStrict(data, Set)) {\n      return data.has(value);\n    }\n\n    if (string(data)) {\n      return data.indexOf(value) !== -1;\n    }\n\n    if (haveSymbols && data[Symbol.iterator] && isFunction(data.values)) {\n      iterator = data.values();\n\n      do {\n        iteration = iterator.next();\n\n        if (iteration.value === value) {\n          return true;\n        }\n      } while (!iteration.done);\n\n      return false;\n    }\n\n    return some(data, function (key, dataValue) {\n      return dataValue === value;\n    });\n  }\n  /**\n   * Public function `in`.\n   *\n   * Returns true if `value` is in `data`, false otherwise.\n   * Like `contains`, but with arguments flipped.\n   */\n\n\n  function isIn(value, data) {\n    return contains(data, value);\n  }\n  /**\n   * Public function `containsKey`.\n   *\n   * Returns true if `data` contains key `key`, false otherwise.\n   * Works with objects, arrays and array-likes (including strings).\n   */\n\n\n  function containsKey(data, key) {\n    if (!assigned(data)) {\n      return false;\n    }\n\n    if (haveMaps && instanceStrict(data, Map)) {\n      return data.has(key);\n    }\n\n    if (iterable(data) && !number(+key)) {\n      return false;\n    }\n\n    return !!data[key];\n  }\n  /**\n   * Public function `keyIn`.\n   *\n   * Returns true if key `key` is in `data`, false otherwise.\n   * Like `contains`, but with arguments flipped.\n   */\n\n\n  function keyIn(key, data) {\n    return containsKey(data, key);\n  }\n  /**\n   * Public function `hasLength`.\n   *\n   * Returns true if `data` has a length property that equals `length`, false\n   * otherwise.\n   */\n\n\n  function hasLength(data, length) {\n    return assigned(data) && data.length === length;\n  }\n  /**\n   * Public function `date`.\n   *\n   * Returns true if `data` is a valid date, false otherwise.\n   */\n\n\n  function date(data) {\n    return instanceStrict(data, Date) && integer(data.getTime());\n  }\n  /**\n   * Public function `function`.\n   *\n   * Returns true if `data` is a function, false otherwise.\n   */\n\n\n  function isFunction(data) {\n    return typeof data === 'function';\n  }\n  /**\n   * Public function `throws`.\n   *\n   * Returns true if `data` is a function that throws, false otherwise.\n   */\n\n\n  function throws(data) {\n    if (!isFunction(data)) {\n      return false;\n    }\n\n    try {\n      data();\n    } catch (error) {\n      return true;\n    }\n\n    return false;\n  }\n  /**\n   * Public function `map`.\n   *\n   * Maps each value from `data` to the corresponding predicate and returns\n   * the results. If the same function is to be applied across all of the data,\n   * a single predicate function may be passed in.\n   */\n\n\n  function map(data, predicates) {\n    var result;\n\n    if (isArray(data)) {\n      result = [];\n    } else {\n      result = {};\n    }\n\n    if (isFunction(predicates)) {\n      forEach(data, function (key, value) {\n        result[key] = predicates(value);\n      });\n    } else {\n      if (!isArray(predicates)) {\n        assert.object(predicates);\n      }\n\n      var dataKeys = keys(data || {});\n      forEach(predicates, function (key, predicate) {\n        dataKeys.some(function (dataKey, index) {\n          if (dataKey === key) {\n            dataKeys.splice(index, 1);\n            return true;\n          }\n\n          return false;\n        });\n\n        if (isFunction(predicate)) {\n          if (not.assigned(data)) {\n            result[key] = !!predicate.m;\n          } else {\n            result[key] = predicate(data[key]);\n          }\n        } else {\n          result[key] = map(data[key], predicate);\n        }\n      });\n    }\n\n    return result;\n  }\n\n  function forEach(object, action) {\n    for (var key in object) {\n      if (hasOwnProperty.call(object, key)) {\n        action(key, object[key]);\n      }\n    }\n  }\n  /**\n   * Public function `all`\n   *\n   * Check that all boolean values are true\n   * in an array or object returned from `map`.\n   */\n\n\n  function all(data) {\n    if (isArray(data)) {\n      return testArray(data, false);\n    }\n\n    assert.object(data);\n    return testObject(data, false);\n  }\n\n  function testArray(data, result) {\n    var i;\n\n    for (i = 0; i < data.length; i += 1) {\n      if (data[i] === result) {\n        return result;\n      }\n    }\n\n    return !result;\n  }\n\n  function testObject(data, result) {\n    var key, value;\n\n    for (key in data) {\n      if (hasOwnProperty.call(data, key)) {\n        value = data[key];\n\n        if (object(value) && testObject(value, result) === result) {\n          return result;\n        }\n\n        if (value === result) {\n          return result;\n        }\n      }\n    }\n\n    return !result;\n  }\n  /**\n   * Public function `any`\n   *\n   * Check that at least one boolean value is true\n   * in an array or object returned from `map`.\n   */\n\n\n  function any(data) {\n    if (isArray(data)) {\n      return testArray(data, true);\n    }\n\n    assert.object(data);\n    return testObject(data, true);\n  }\n\n  function mixin(target, source) {\n    forEach(source, function (key, value) {\n      target[key] = value;\n    });\n    return target;\n  }\n  /**\n   * Public modifier `assert`.\n   *\n   * Throws if `predicate` returns false.\n   */\n\n\n  function assertModifier(predicate, defaultMessage) {\n    return function () {\n      var args = arguments;\n      var argCount = predicate.l || predicate.length;\n      var message = args[argCount];\n      var ErrorType = args[argCount + 1];\n      assertImpl(predicate.apply(null, args), nonEmptyString(message) ? message : defaultMessage.replace('{a}', messageFormatter(args[0])).replace('{e}', messageFormatter(args[1])).replace('{e2}', messageFormatter(args[2])).replace('{t}', function () {\n        var arg = args[1];\n\n        if (arg && arg.name) {\n          return arg.name;\n        }\n\n        return arg;\n      }), isFunction(ErrorType) ? ErrorType : TypeError);\n      return args[0];\n    };\n  }\n\n  function messageFormatter(arg) {\n    return function () {\n      if (string(arg)) {\n        return '\"' + arg.replace(/\\\\/g, '\\\\\\\\').replace(/\"/g, '\\\\\"') + '\"';\n      }\n\n      if (arg && arg !== true && arg.constructor && !instanceStrict(arg, RegExp) && typeof arg !== 'number') {\n        return arg.constructor.name;\n      }\n\n      return arg;\n    };\n  }\n\n  function assertImpl(value, message, ErrorType) {\n    if (value) {\n      return value;\n    }\n\n    throw new (ErrorType || Error)(message || 'assert failed');\n  }\n  /**\n   * Public modifier `not`.\n   *\n   * Negates `predicate`.\n   */\n\n\n  function notModifier(predicate) {\n    var modifiedPredicate = function () {\n      return notImpl(predicate.apply(null, arguments));\n    };\n\n    modifiedPredicate.l = predicate.length;\n    return modifiedPredicate;\n  }\n\n  function notImpl(value) {\n    return !value;\n  }\n  /**\n   * Public modifier `maybe`.\n   *\n   * Returns true if predicate argument is  null or undefined,\n   * otherwise propagates the return value from `predicate`.\n   */\n\n\n  function maybeModifier(predicate) {\n    var modifiedPredicate = function () {\n      if (not.assigned(arguments[0])) {\n        return true;\n      }\n\n      return predicate.apply(null, arguments);\n    };\n\n    modifiedPredicate.l = predicate.length; // Hackishly indicate that this is a maybe.xxx predicate.\n    // Without this flag, the alternative would be to iterate\n    // through the maybe predicates or use indexOf to check,\n    // which would be time-consuming.\n\n    modifiedPredicate.m = true;\n    return modifiedPredicate;\n  }\n\n  function maybeImpl(value) {\n    if (assigned(value) === false) {\n      return true;\n    }\n\n    return value;\n  }\n  /**\n   * Public modifier `of`.\n   *\n   * Applies the chained predicate to members of the collection.\n   */\n\n\n  function ofModifier(target, type, predicate) {\n    var modifiedPredicate = function () {\n      var collection, args;\n      collection = arguments[0];\n\n      if (target === 'maybe' && not.assigned(collection)) {\n        return true;\n      }\n\n      if (!type(collection)) {\n        return false;\n      }\n\n      collection = coerceCollection(type, collection);\n      args = slice.call(arguments, 1);\n\n      try {\n        collection.forEach(function (item) {\n          if ((target !== 'maybe' || assigned(item)) && !predicate.apply(null, [item].concat(args))) {\n            // TODO: Replace with for...of when ES6 is required.\n            throw 0;\n          }\n        });\n      } catch (ignore) {\n        return false;\n      }\n\n      return true;\n    };\n\n    modifiedPredicate.l = predicate.length;\n    return modifiedPredicate;\n  }\n\n  function coerceCollection(type, collection) {\n    switch (type) {\n      case arrayLike:\n        return slice.call(collection);\n\n      case object:\n        return keys(collection).map(function (key) {\n          return collection[key];\n        });\n\n      default:\n        return collection;\n    }\n  }\n\n  function createModifiedPredicates(modifier, object) {\n    return createModifiedFunctions([modifier, predicates, object, '']);\n  }\n\n  function createModifiedFunctions(args) {\n    var modifier, messageModifier, object, functions;\n    modifier = args.shift();\n    messageModifier = args.pop();\n    object = args.pop();\n    functions = args.pop();\n    forEach(functions, function (key, fn) {\n      var message = messages[key];\n\n      if (message && messageModifier) {\n        message = message.replace('to', messageModifier + 'to');\n      }\n\n      Object.defineProperty(object, key, {\n        configurable: false,\n        enumerable: true,\n        writable: false,\n        value: modifier.apply(null, args.concat(fn, message))\n      });\n    });\n    return object;\n  }\n\n  function createModifiedModifier(modifier, modified, messageModifier) {\n    return createModifiedFunctions([modifier, modified, {}, messageModifier]);\n  }\n\n  function createOfPredicates(key) {\n    predicates[key].of = createModifiedFunctions([ofModifier.bind(null, null), predicates[key], predicates, {}, '']);\n  }\n\n  function createOfModifiers(base, modifier) {\n    collections.forEach(function (key) {\n      base[key].of = createModifiedModifier(modifier, predicates[key].of);\n    });\n  }\n\n  function createMaybeOfModifiers(key) {\n    maybe[key].of = createModifiedFunctions([ofModifier.bind(null, 'maybe'), predicates[key], predicates, {}, '']);\n    assert.maybe[key].of = createModifiedModifier(assertModifier, maybe[key].of);\n    assert.not[key].of = createModifiedModifier(assertModifier, not[key].of);\n  }\n\n  function exportFunctions(functions) {\n    if (typeof define === 'function' && define.amd) {\n      define(function () {\n        return functions;\n      });\n    } else if (typeof module !== 'undefined' && module !== null && module.exports) {\n      module.exports = functions;\n    } else {\n      globals.check = functions;\n    }\n  }\n})(this);","map":{"version":3,"sources":["/home/manish/Development World/React project/crwn-clothing/node_modules/check-types/src/check-types.js"],"names":["globals","messages","predicates","functions","assert","not","maybe","collections","hasOwnProperty","toString","keys","slice","isArray","neginf","posinf","haveSymbols","haveMaps","haveSets","n","f","equal","s","isUndefined","isNull","assigned","primitive","contains","isIn","containsKey","keyIn","zero","one","infinity","number","integer","float","even","odd","greater","less","between","greaterOrEqual","lessOrEqual","inRange","positive","negative","string","emptyString","nonEmptyString","match","boolean","object","emptyObject","nonEmptyObject","instanceStrict","thenable","instance","like","array","emptyArray","nonEmptyArray","arrayLike","iterable","date","isFunction","hasLength","throws","map","data","all","any","Object","prototype","Array","Number","NEGATIVE_INFINITY","POSITIVE_INFINITY","Symbol","Map","Set","mixin","createModifiedPredicates","assertModifier","assertImpl","notModifier","notImpl","maybeModifier","maybeImpl","createModifiedModifier","forEach","createOfPredicates","createOfModifiers","createMaybeOfModifiers","exportFunctions","lhs","rhs","undefined","type","x","y","regex","call","some","predicate","key","then","error","constructor","name","archetype","length","iterator","value","iteration","has","indexOf","values","next","done","dataValue","Date","getTime","result","dataKeys","dataKey","index","splice","m","action","testArray","testObject","i","target","source","defaultMessage","args","arguments","argCount","l","message","ErrorType","apply","replace","messageFormatter","arg","TypeError","RegExp","Error","modifiedPredicate","ofModifier","collection","coerceCollection","item","concat","ignore","modifier","createModifiedFunctions","messageModifier","shift","pop","fn","defineProperty","configurable","enumerable","writable","modified","of","bind","base","define","amd","module","exports","check"],"mappings":"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","sourcesContent":["/*globals define, module, Symbol, Map, Set */\n/*jshint -W056 */\n\n(function (globals) {\n  'use strict';\n\n  var messages, predicates, functions, assert, not, maybe, collections,\n     hasOwnProperty, toString, keys, slice, isArray, neginf, posinf,\n     haveSymbols, haveMaps, haveSets;\n\n  messages = {};\n  predicates = {};\n\n  [\n    { n: 'equal', f: equal, s: 'equal {e}' },\n    { n: 'undefined', f: isUndefined, s: 'be undefined' },\n    { n: 'null', f: isNull, s: 'be null' },\n    { n: 'assigned', f: assigned, s: 'be assigned' },\n    { n: 'primitive', f: primitive, s: 'be primitive type' },\n    { n: 'contains', f: contains, s: 'contain {e}' },\n    { n: 'in', f: isIn, s: 'be in {e}' },\n    { n: 'containsKey', f: containsKey, s: 'contain key {e}' },\n    { n: 'keyIn', f: keyIn, s: 'be key in {e}' },\n    { n: 'zero', f: zero, s: 'be 0' },\n    { n: 'one', f: one, s: 'be 1' },\n    { n: 'infinity', f: infinity, s: 'be infinity' },\n    { n: 'number', f: number, s: 'be Number' },\n    { n: 'integer', f: integer, s: 'be integer' },\n    { n: 'float', f: float, s: 'be non-integer number' },\n    { n: 'even', f: even, s: 'be even number' },\n    { n: 'odd', f: odd, s: 'be odd number' },\n    { n: 'greater', f: greater, s: 'be greater than {e}' },\n    { n: 'less', f: less, s: 'be less than {e}' },\n    { n: 'between', f: between, s: 'be between {e} and {e2}' },\n    { n: 'greaterOrEqual', f: greaterOrEqual, s: 'be greater than or equal to {e}' },\n    { n: 'lessOrEqual', f: lessOrEqual, s: 'be less than or equal to {e}' },\n    { n: 'inRange', f: inRange, s: 'be in the range {e} to {e2}' },\n    { n: 'positive', f: positive, s: 'be positive number' },\n    { n: 'negative', f: negative, s: 'be negative number' },\n    { n: 'string', f: string, s: 'be String' },\n    { n: 'emptyString', f: emptyString, s: 'be empty string' },\n    { n: 'nonEmptyString', f: nonEmptyString, s: 'be non-empty string' },\n    { n: 'match', f: match, s: 'match {e}' },\n    { n: 'boolean', f: boolean, s: 'be Boolean' },\n    { n: 'object', f: object, s: 'be Object' },\n    { n: 'emptyObject', f: emptyObject, s: 'be empty object' },\n    { n: 'nonEmptyObject', f: nonEmptyObject, s: 'be non-empty object' },\n    { n: 'instanceStrict', f: instanceStrict, s: 'be instanceof {t}' },\n    { n: 'thenable', f: thenable, s: 'be promise-like' },\n    { n: 'instance', f: instance, s: 'be {t}' },\n    { n: 'like', f: like, s: 'be like {e}' },\n    { n: 'array', f: array, s: 'be Array' },\n    { n: 'emptyArray', f: emptyArray, s: 'be empty array' },\n    { n: 'nonEmptyArray', f: nonEmptyArray, s: 'be non-empty array' },\n    { n: 'arrayLike', f: arrayLike, s: 'be array-like' },\n    { n: 'iterable', f: iterable, s: 'be iterable' },\n    { n: 'date', f: date, s: 'be valid Date' },\n    { n: 'function', f: isFunction, s: 'be Function' },\n    { n: 'hasLength', f: hasLength, s: 'have length {e}' },\n    { n: 'throws', f: throws, s: 'throw' }\n  ].map(function (data) {\n    var n = data.n;\n    messages[n] = 'assert failed: expected {a} to ' + data.s;\n    predicates[n] = data.f;\n  });\n\n  functions = {\n    map: map,\n    all: all,\n    any: any\n  };\n\n  collections = [ 'array', 'arrayLike', 'iterable', 'object' ];\n  hasOwnProperty = Object.prototype.hasOwnProperty;\n  toString = Object.prototype.toString;\n  keys = Object.keys;\n  slice = Array.prototype.slice;\n  isArray = Array.isArray;\n  neginf = Number.NEGATIVE_INFINITY;\n  posinf = Number.POSITIVE_INFINITY;\n  haveSymbols = typeof Symbol === 'function';\n  haveMaps = typeof Map === 'function';\n  haveSets = typeof Set === 'function';\n\n  functions = mixin(functions, predicates);\n  assert = createModifiedPredicates(assertModifier, assertImpl);\n  not = createModifiedPredicates(notModifier, notImpl);\n  maybe = createModifiedPredicates(maybeModifier, maybeImpl);\n  assert.not = createModifiedModifier(assertModifier, not, 'not ');\n  assert.maybe = createModifiedModifier(assertModifier, maybe, 'maybe ');\n\n  collections.forEach(createOfPredicates);\n  createOfModifiers(assert, assertModifier);\n  createOfModifiers(not, notModifier);\n  collections.forEach(createMaybeOfModifiers);\n\n  exportFunctions(mixin(functions, {\n    assert: assert,\n    not: not,\n    maybe: maybe\n  }));\n\n  /**\n   * Public function `equal`.\n   *\n   * Returns true if `lhs` and `rhs` are strictly equal, without coercion.\n   * Returns false otherwise.\n   */\n  function equal (lhs, rhs) {\n    return lhs === rhs;\n  }\n\n  /**\n   * Public function `undefined`.\n   *\n   * Returns true if `data` is undefined, false otherwise.\n   */\n  function isUndefined (data) {\n    return data === undefined;\n  }\n\n  /**\n   * Public function `null`.\n   *\n   * Returns true if `data` is null, false otherwise.\n   */\n  function isNull (data) {\n    return data === null;\n  }\n\n  /**\n   * Public function `assigned`.\n   *\n   * Returns true if `data` is not null or undefined, false otherwise.\n   */\n  function assigned (data) {\n    return data !== undefined && data !== null;\n  }\n\n  /**\n   * Public function `primitive`.\n   *\n   * Returns true if `data` is a primitive type, false otherwise.\n   */\n  function primitive (data) {\n    var type;\n\n    switch (data) {\n      case null:\n      case undefined:\n      case false:\n      case true:\n        return true;\n    }\n\n    type = typeof data;\n    return type === 'string' || type === 'number' || (haveSymbols && type === 'symbol');\n  }\n\n  /**\n   * Public function `zero`.\n   *\n   * Returns true if `data` is zero, false otherwise.\n   */\n  function zero (data) {\n    return data === 0;\n  }\n\n  /**\n   * Public function `one`.\n   *\n   * Returns true if `data` is one, false otherwise.\n   */\n  function one (data) {\n    return data === 1;\n  }\n\n  /**\n   * Public function `infinity`.\n   *\n   * Returns true if `data` is positive or negative infinity, false otherwise.\n   */\n  function infinity (data) {\n    return data === neginf || data === posinf;\n  }\n\n  /**\n   * Public function `number`.\n   *\n   * Returns true if `data` is a number, false otherwise.\n   */\n  function number (data) {\n    return typeof data === 'number' && data > neginf && data < posinf;\n  }\n\n  /**\n   * Public function `integer`.\n   *\n   * Returns true if `data` is an integer, false otherwise.\n   */\n  function integer (data) {\n    return typeof data === 'number' && data % 1 === 0;\n  }\n\n  /**\n   * Public function `float`.\n   *\n   * Returns true if `data` is a non-integer number, false otherwise.\n   */\n  function float (data) {\n    return number(data) && data % 1 !== 0;\n  }\n\n  /**\n   * Public function `even`.\n   *\n   * Returns true if `data` is an even number, false otherwise.\n   */\n  function even (data) {\n    return typeof data === 'number' && data % 2 === 0;\n  }\n\n  /**\n   * Public function `odd`.\n   *\n   * Returns true if `data` is an odd number, false otherwise.\n   */\n  function odd (data) {\n    return integer(data) && data % 2 !== 0;\n  }\n\n  /**\n   * Public function `greater`.\n   *\n   * Returns true if `lhs` is a number greater than `rhs`, false otherwise.\n   */\n  function greater (lhs, rhs) {\n    return number(lhs) && lhs > rhs;\n  }\n\n  /**\n   * Public function `less`.\n   *\n   * Returns true if `lhs` is a number less than `rhs`, false otherwise.\n   */\n  function less (lhs, rhs) {\n    return number(lhs) && lhs < rhs;\n  }\n\n  /**\n   * Public function `between`.\n   *\n   * Returns true if `data` is a number between `x` and `y`, false otherwise.\n   */\n  function between (data, x, y) {\n    if (x < y) {\n      return greater(data, x) && data < y;\n    }\n\n    return less(data, x) && data > y;\n  }\n\n  /**\n   * Public function `greaterOrEqual`.\n   *\n   * Returns true if `lhs` is a number greater than or equal to `rhs`, false\n   * otherwise.\n   */\n  function greaterOrEqual (lhs, rhs) {\n    return number(lhs) && lhs >= rhs;\n  }\n\n  /**\n   * Public function `lessOrEqual`.\n   *\n   * Returns true if `lhs` is a number less than or equal to `rhs`, false\n   * otherwise.\n   */\n  function lessOrEqual (lhs, rhs) {\n    return number(lhs) && lhs <= rhs;\n  }\n\n  /**\n   * Public function `inRange`.\n   *\n   * Returns true if `data` is a number in the range `x..y`, false otherwise.\n   */\n  function inRange (data, x, y) {\n    if (x < y) {\n      return greaterOrEqual(data, x) && data <= y;\n    }\n\n    return lessOrEqual(data, x) && data >= y;\n  }\n\n  /**\n   * Public function `positive`.\n   *\n   * Returns true if `data` is a positive number, false otherwise.\n   */\n  function positive (data) {\n    return greater(data, 0);\n  }\n\n  /**\n   * Public function `negative`.\n   *\n   * Returns true if `data` is a negative number, false otherwise.\n   */\n  function negative (data) {\n    return less(data, 0);\n  }\n\n  /**\n   * Public function `string`.\n   *\n   * Returns true if `data` is a string, false otherwise.\n   */\n  function string (data) {\n    return typeof data === 'string';\n  }\n\n  /**\n   * Public function `emptyString`.\n   *\n   * Returns true if `data` is the empty string, false otherwise.\n   */\n  function emptyString (data) {\n    return data === '';\n  }\n\n  /**\n   * Public function `nonEmptyString`.\n   *\n   * Returns true if `data` is a non-empty string, false otherwise.\n   */\n  function nonEmptyString (data) {\n    return string(data) && data !== '';\n  }\n\n  /**\n   * Public function `match`.\n   *\n   * Returns true if `data` is a string that matches `regex`, false otherwise.\n   */\n  function match (data, regex) {\n    return string(data) && !! data.match(regex);\n  }\n\n  /**\n   * Public function `boolean`.\n   *\n   * Returns true if `data` is a boolean value, false otherwise.\n   */\n  function boolean (data) {\n    return data === false || data === true;\n  }\n\n  /**\n   * Public function `object`.\n   *\n   * Returns true if `data` is a plain-old JS object, false otherwise.\n   */\n  function object (data) {\n    return toString.call(data) === '[object Object]';\n  }\n\n  /**\n   * Public function `emptyObject`.\n   *\n   * Returns true if `data` is an empty object, false otherwise.\n   */\n  function emptyObject (data) {\n    return object(data) && !some(data, function () {\n      return true;\n    });\n  }\n\n  function some (data, predicate) {\n    for (var key in data) {\n      if (hasOwnProperty.call(data, key)) {\n        if (predicate(key, data[key])) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n  /**\n   * Public function `nonEmptyObject`.\n   *\n   * Returns true if `data` is a non-empty object, false otherwise.\n   */\n  function nonEmptyObject (data) {\n    return object(data) && some(data, function () {\n      return true;\n    });\n  }\n\n  /**\n   * Public function `thenable`.\n   *\n   * Returns true if `data` has a `then` method.\n   */\n  function thenable (data) {\n    return assigned(data) && isFunction(data.then);\n  }\n\n  /**\n   * Public function `instanceStrict`.\n   *\n   * Returns true if `data` is an instance of `prototype`, false otherwise.\n   */\n  function instanceStrict (data, prototype) {\n    try {\n      return data instanceof prototype;\n    } catch (error) {\n      return false;\n    }\n  }\n\n  /**\n   * Public function `instance`.\n   *\n   * Returns true if `data` is an instance of `prototype`, false otherwise.\n   * Falls back to testing constructor.name and Object.prototype.toString\n   * if the initial instanceof test fails.\n   */\n  function instance (data, prototype) {\n    try {\n      return instanceStrict(data, prototype) ||\n        data.constructor.name === prototype.name ||\n        toString.call(data) === '[object ' + prototype.name + ']';\n    } catch (error) {\n      return false;\n    }\n  }\n\n  /**\n   * Public function `like`.\n   *\n   * Tests whether `data` 'quacks like a duck'. Returns true if `data` has all\n   * of the properties of `archetype` (the 'duck'), false otherwise.\n   */\n  function like (data, archetype) {\n    var name;\n\n    for (name in archetype) {\n      if (hasOwnProperty.call(archetype, name)) {\n        if (hasOwnProperty.call(data, name) === false || typeof data[name] !== typeof archetype[name]) {\n          return false;\n        }\n\n        if (object(data[name]) && like(data[name], archetype[name]) === false) {\n          return false;\n        }\n      }\n    }\n\n    return true;\n  }\n\n  /**\n   * Public function `array`.\n   *\n   * Returns true if `data` is an array, false otherwise.\n   */\n  function array (data) {\n    return isArray(data);\n  }\n\n  /**\n   * Public function `emptyArray`.\n   *\n   * Returns true if `data` is an empty array, false otherwise.\n   */\n  function emptyArray (data) {\n    return isArray(data) && data.length === 0;\n  }\n\n  /**\n   * Public function `nonEmptyArray`.\n   *\n   * Returns true if `data` is a non-empty array, false otherwise.\n   */\n  function nonEmptyArray (data) {\n    return isArray(data) && data.length > 0;\n  }\n\n  /**\n   * Public function `arrayLike`.\n   *\n   * Returns true if `data` is an array-like object, false otherwise.\n   */\n  function arrayLike (data) {\n    return assigned(data) && data.length >= 0;\n  }\n\n  /**\n   * Public function `iterable`.\n   *\n   * Returns true if `data` is an iterable, false otherwise.\n   */\n  function iterable (data) {\n    if (! haveSymbols) {\n      // Fall back to `arrayLike` predicate in pre-ES6 environments.\n      return arrayLike(data);\n    }\n\n    return assigned(data) && isFunction(data[Symbol.iterator]);\n  }\n\n  /**\n   * Public function `contains`.\n   *\n   * Returns true if `data` contains `value`, false otherwise.\n   * Works with objects, arrays and array-likes (including strings).\n   */\n  function contains (data, value) {\n    var iterator, iteration;\n\n    if (! assigned(data)) {\n      return false;\n    }\n\n    if (haveSets && instanceStrict(data, Set)) {\n      return data.has(value);\n    }\n\n    if (string(data)) {\n      return data.indexOf(value) !== -1;\n    }\n\n    if (haveSymbols && data[Symbol.iterator] && isFunction(data.values)) {\n      iterator = data.values();\n\n      do {\n        iteration = iterator.next();\n\n        if (iteration.value === value) {\n          return true;\n        }\n      } while (! iteration.done);\n\n      return false;\n    }\n\n    return some(data, function (key, dataValue) {\n      return dataValue === value;\n    });\n  }\n\n  /**\n   * Public function `in`.\n   *\n   * Returns true if `value` is in `data`, false otherwise.\n   * Like `contains`, but with arguments flipped.\n   */\n  function isIn (value, data) {\n    return contains(data, value);\n  }\n\n  /**\n   * Public function `containsKey`.\n   *\n   * Returns true if `data` contains key `key`, false otherwise.\n   * Works with objects, arrays and array-likes (including strings).\n   */\n  function containsKey (data, key) {\n    if (! assigned(data)) {\n      return false;\n    }\n\n    if (haveMaps && instanceStrict(data, Map)) {\n      return data.has(key);\n    }\n\n    if (iterable(data) && ! number(+key)) {\n      return false;\n    }\n\n    return !! data[key];\n  }\n\n  /**\n   * Public function `keyIn`.\n   *\n   * Returns true if key `key` is in `data`, false otherwise.\n   * Like `contains`, but with arguments flipped.\n   */\n  function keyIn (key, data) {\n    return containsKey(data, key);\n  }\n\n  /**\n   * Public function `hasLength`.\n   *\n   * Returns true if `data` has a length property that equals `length`, false\n   * otherwise.\n   */\n  function hasLength (data, length) {\n    return assigned(data) && data.length === length;\n  }\n\n  /**\n   * Public function `date`.\n   *\n   * Returns true if `data` is a valid date, false otherwise.\n   */\n  function date (data) {\n    return instanceStrict(data, Date) && integer(data.getTime());\n  }\n\n  /**\n   * Public function `function`.\n   *\n   * Returns true if `data` is a function, false otherwise.\n   */\n  function isFunction (data) {\n    return typeof data === 'function';\n  }\n\n  /**\n   * Public function `throws`.\n   *\n   * Returns true if `data` is a function that throws, false otherwise.\n   */\n  function throws (data) {\n    if (! isFunction(data)) {\n      return false;\n    }\n\n    try {\n      data();\n    } catch (error) {\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Public function `map`.\n   *\n   * Maps each value from `data` to the corresponding predicate and returns\n   * the results. If the same function is to be applied across all of the data,\n   * a single predicate function may be passed in.\n   */\n  function map (data, predicates) {\n    var result;\n\n    if (isArray(data)) {\n      result = [];\n    } else {\n      result = {};\n    }\n\n    if (isFunction(predicates)) {\n      forEach(data, function (key, value) {\n        result[key] = predicates(value);\n      });\n    } else {\n      if (! isArray(predicates)) {\n        assert.object(predicates);\n      }\n\n      var dataKeys = keys(data || {});\n\n      forEach(predicates, function (key, predicate) {\n        dataKeys.some(function (dataKey, index) {\n          if (dataKey === key) {\n            dataKeys.splice(index, 1);\n            return true;\n          }\n          return false;\n        });\n\n        if (isFunction(predicate)) {\n          if (not.assigned(data)) {\n            result[key] = !!predicate.m;\n          } else {\n            result[key] = predicate(data[key]);\n          }\n        } else {\n          result[key] = map(data[key], predicate);\n        }\n      });\n    }\n\n    return result;\n  }\n\n  function forEach (object, action) {\n    for (var key in object) {\n      if (hasOwnProperty.call(object, key)) {\n        action(key, object[key]);\n      }\n    }\n  }\n\n  /**\n   * Public function `all`\n   *\n   * Check that all boolean values are true\n   * in an array or object returned from `map`.\n   */\n  function all (data) {\n    if (isArray(data)) {\n      return testArray(data, false);\n    }\n\n    assert.object(data);\n\n    return testObject(data, false);\n  }\n\n  function testArray (data, result) {\n    var i;\n\n    for (i = 0; i < data.length; i += 1) {\n      if (data[i] === result) {\n        return result;\n      }\n    }\n\n    return !result;\n  }\n\n  function testObject (data, result) {\n    var key, value;\n\n    for (key in data) {\n      if (hasOwnProperty.call(data, key)) {\n        value = data[key];\n\n        if (object(value) && testObject(value, result) === result) {\n          return result;\n        }\n\n        if (value === result) {\n          return result;\n        }\n      }\n    }\n\n    return !result;\n  }\n\n  /**\n   * Public function `any`\n   *\n   * Check that at least one boolean value is true\n   * in an array or object returned from `map`.\n   */\n  function any (data) {\n    if (isArray(data)) {\n      return testArray(data, true);\n    }\n\n    assert.object(data);\n\n    return testObject(data, true);\n  }\n\n  function mixin (target, source) {\n    forEach(source, function (key, value) {\n      target[key] = value;\n    });\n\n    return target;\n  }\n\n  /**\n   * Public modifier `assert`.\n   *\n   * Throws if `predicate` returns false.\n   */\n  function assertModifier (predicate, defaultMessage) {\n    return function () {\n      var args = arguments;\n      var argCount = predicate.l || predicate.length;\n      var message = args[argCount];\n      var ErrorType = args[argCount + 1];\n\n      assertImpl(\n        predicate.apply(null, args),\n        nonEmptyString(message) ? message : defaultMessage\n          .replace('{a}', messageFormatter(args[0]))\n          .replace('{e}', messageFormatter(args[1]))\n          .replace('{e2}', messageFormatter(args[2]))\n          .replace('{t}', function () {\n            var arg = args[1];\n\n            if (arg && arg.name) {\n              return arg.name;\n            }\n\n            return arg;\n          }),\n        isFunction(ErrorType) ? ErrorType : TypeError\n      );\n\n      return args[0];\n    };\n  }\n\n  function messageFormatter (arg) {\n    return function () {\n      if (string(arg)) {\n        return '\"' + arg.replace(/\\\\/g, '\\\\\\\\').replace(/\"/g, '\\\\\"') + '\"';\n      }\n\n      if (arg && arg !== true && arg.constructor && ! instanceStrict(arg, RegExp) && typeof arg !== 'number') {\n        return arg.constructor.name;\n      }\n\n      return arg;\n    };\n  }\n\n  function assertImpl (value, message, ErrorType) {\n    if (value) {\n      return value;\n    }\n    throw new (ErrorType || Error)(message || 'assert failed');\n  }\n\n  /**\n   * Public modifier `not`.\n   *\n   * Negates `predicate`.\n   */\n  function notModifier (predicate) {\n    var modifiedPredicate = function () {\n      return notImpl(predicate.apply(null, arguments));\n    };\n    modifiedPredicate.l = predicate.length;\n    return modifiedPredicate;\n  }\n\n  function notImpl (value) {\n    return !value;\n  }\n\n  /**\n   * Public modifier `maybe`.\n   *\n   * Returns true if predicate argument is  null or undefined,\n   * otherwise propagates the return value from `predicate`.\n   */\n  function maybeModifier (predicate) {\n    var modifiedPredicate = function () {\n      if (not.assigned(arguments[0])) {\n        return true;\n      }\n\n      return predicate.apply(null, arguments);\n    };\n    modifiedPredicate.l = predicate.length;\n\n    // Hackishly indicate that this is a maybe.xxx predicate.\n    // Without this flag, the alternative would be to iterate\n    // through the maybe predicates or use indexOf to check,\n    // which would be time-consuming.\n    modifiedPredicate.m = true;\n\n    return modifiedPredicate;\n  }\n\n  function maybeImpl (value) {\n    if (assigned(value) === false) {\n      return true;\n    }\n\n    return value;\n  }\n\n  /**\n   * Public modifier `of`.\n   *\n   * Applies the chained predicate to members of the collection.\n   */\n  function ofModifier (target, type, predicate) {\n    var modifiedPredicate = function () {\n      var collection, args;\n\n      collection = arguments[0];\n\n      if (target === 'maybe' && not.assigned(collection)) {\n        return true;\n      }\n\n      if (!type(collection)) {\n        return false;\n      }\n\n      collection = coerceCollection(type, collection);\n      args = slice.call(arguments, 1);\n\n      try {\n        collection.forEach(function (item) {\n          if (\n            (target !== 'maybe' || assigned(item)) &&\n            !predicate.apply(null, [ item ].concat(args))\n          ) {\n            // TODO: Replace with for...of when ES6 is required.\n            throw 0;\n          }\n        });\n      } catch (ignore) {\n        return false;\n      }\n\n      return true;\n    };\n    modifiedPredicate.l = predicate.length;\n    return modifiedPredicate;\n  }\n\n  function coerceCollection (type, collection) {\n    switch (type) {\n      case arrayLike:\n        return slice.call(collection);\n      case object:\n        return keys(collection).map(function (key) {\n          return collection[key];\n        });\n      default:\n        return collection;\n    }\n  }\n\n  function createModifiedPredicates (modifier, object) {\n    return createModifiedFunctions([ modifier, predicates, object, '' ]);\n  }\n\n  function createModifiedFunctions (args) {\n    var modifier, messageModifier, object, functions;\n\n    modifier = args.shift();\n    messageModifier = args.pop();\n    object = args.pop();\n    functions = args.pop();\n\n    forEach(functions, function (key, fn) {\n      var message = messages[key];\n      if (message && messageModifier) {\n        message = message.replace('to', messageModifier + 'to');\n      }\n\n      Object.defineProperty(object, key, {\n        configurable: false,\n        enumerable: true,\n        writable: false,\n        value: modifier.apply(null, args.concat(fn, message))\n      });\n    });\n\n    return object;\n  }\n\n  function createModifiedModifier (modifier, modified, messageModifier) {\n    return createModifiedFunctions([ modifier, modified, {}, messageModifier ]);\n  }\n\n  function createOfPredicates (key) {\n    predicates[key].of = createModifiedFunctions(\n      [ ofModifier.bind(null, null), predicates[key], predicates, {}, '' ]\n    );\n  }\n\n  function createOfModifiers (base, modifier) {\n    collections.forEach(function (key) {\n      base[key].of = createModifiedModifier(modifier, predicates[key].of);\n    });\n  }\n\n  function createMaybeOfModifiers (key) {\n    maybe[key].of = createModifiedFunctions(\n      [ ofModifier.bind(null, 'maybe'), predicates[key], predicates, {}, '' ]\n    );\n    assert.maybe[key].of = createModifiedModifier(assertModifier, maybe[key].of);\n    assert.not[key].of = createModifiedModifier(assertModifier, not[key].of);\n  }\n\n  function exportFunctions (functions) {\n    if (typeof define === 'function' && define.amd) {\n      define(function () {\n        return functions;\n      });\n    } else if (typeof module !== 'undefined' && module !== null && module.exports) {\n      module.exports = functions;\n    } else {\n      globals.check = functions;\n    }\n  }\n}(this));\n"]},"metadata":{},"sourceType":"script"}