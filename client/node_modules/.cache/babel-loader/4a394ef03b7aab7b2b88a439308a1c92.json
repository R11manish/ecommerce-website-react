{"ast":null,"code":"import { takeEvery, call, put } from '@redux-saga/core/effects';\nimport ShopActionTypes from './shop.types';\nimport { firestore, convertCollectionsSnapShotToMap } from '../../firebase/firebase.utlis';\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from './shop.actions';\nexport function* fetchCollectionsAsync() {\n  try {\n    yield console.log('i am fired');\n    const collectionRef = firebase.collection('collection');\n    const snapshot = yield collectionRef.get();\n    const collectionsMap = yield call(convertCollectionsSnapShotToMap, snapshot);\n    yield put(fetchCollectionsSuccess(collectionsMap));\n  } catch (error) {\n    yield put(fetchCollectionsFailure(error.message));\n  }\n}\nexport function* fetchCollectionsStart() {\n  yield takeEvery(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n}","map":{"version":3,"sources":["/home/manish/Development World/React project/crwn-clothing/src/redux/shop/shop.sagas.js"],"names":["takeEvery","call","put","ShopActionTypes","firestore","convertCollectionsSnapShotToMap","fetchCollectionsSuccess","fetchCollectionsFailure","fetchCollectionsAsync","console","log","collectionRef","firebase","collection","snapshot","get","collectionsMap","error","message","fetchCollectionsStart","FETCH_COLLECTIONS_START"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,IAApB,EAA0BC,GAA1B,QAAqC,0BAArC;AACA,OAAOC,eAAP,MAA4B,cAA5B;AACA,SACEC,SADF,EAEEC,+BAFF,QAGO,+BAHP;AAMA,SACEC,uBADF,EAEEC,uBAFF,QAGO,gBAHP;AAKA,OAAO,UAAUC,qBAAV,GAAkC;AACvC,MAAI;AACF,UAAMC,OAAO,CAACC,GAAR,CAAY,YAAZ,CAAN;AACA,UAAMC,aAAa,GAAGC,QAAQ,CAACC,UAAT,CAAoB,YAApB,CAAtB;AACA,UAAMC,QAAQ,GAAG,MAAMH,aAAa,CAACI,GAAd,EAAvB;AACA,UAAMC,cAAc,GAAG,MAAMf,IAAI,CAC/BI,+BAD+B,EAE/BS,QAF+B,CAAjC;AAIA,UAAMZ,GAAG,CAACI,uBAAuB,CAACU,cAAD,CAAxB,CAAT;AACD,GATD,CASE,OAAOC,KAAP,EAAc;AACd,UAAMf,GAAG,CAACK,uBAAuB,CAACU,KAAK,CAACC,OAAP,CAAxB,CAAT;AACD;AACF;AAED,OAAO,UAAUC,qBAAV,GAAkC;AACvC,QAAMnB,SAAS,CACbG,eAAe,CAACiB,uBADH,EAEbZ,qBAFa,CAAf;AAID","sourcesContent":["import { takeEvery, call, put } from '@redux-saga/core/effects';\nimport ShopActionTypes from './shop.types';\nimport {\n  firestore,\n  convertCollectionsSnapShotToMap,\n} from '../../firebase/firebase.utlis';\n\n\nimport {\n  fetchCollectionsSuccess,\n  fetchCollectionsFailure,\n} from './shop.actions';\n\nexport function* fetchCollectionsAsync() {\n  try {\n    yield console.log('i am fired');\n    const collectionRef = firebase.collection('collection');\n    const snapshot = yield collectionRef.get();\n    const collectionsMap = yield call(\n      convertCollectionsSnapShotToMap,\n      snapshot\n    );\n    yield put(fetchCollectionsSuccess(collectionsMap));\n  } catch (error) {\n    yield put(fetchCollectionsFailure(error.message));\n  }\n}\n\nexport function* fetchCollectionsStart() {\n  yield takeEvery(\n    ShopActionTypes.FETCH_COLLECTIONS_START,\n    fetchCollectionsAsync\n  );\n}\n"]},"metadata":{},"sourceType":"module"}