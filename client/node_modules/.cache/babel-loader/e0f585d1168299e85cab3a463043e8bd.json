{"ast":null,"code":"import React from'react';import{connect}from'react-redux';import{createStructuredSelector}from'reselect';import CheckoutItem from'../../components/Checkout-item/checkout-item.component';import{selectCartItems,selectCartTotal}from'../../redux/cart/cart.selectors';import StripeCheckoutButton from'../../components/stripe-button/stripe-button.component';import{CheckoutHeaderContainer,CheckoutPageContainer,HeaderBlockContainer,TotalContainer}from'./checkout.styles';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var CheckoutPage=function CheckoutPage(_ref){var cartItems=_ref.cartItems,total=_ref.total;return/*#__PURE__*/_jsxs(CheckoutPageContainer,{children:[/*#__PURE__*/_jsxs(CheckoutHeaderContainer,{children:[/*#__PURE__*/_jsx(HeaderBlockContainer,{children:/*#__PURE__*/_jsx(\"span\",{children:\"Product\"})}),/*#__PURE__*/_jsx(HeaderBlockContainer,{children:/*#__PURE__*/_jsx(\"span\",{children:\"Description\"})}),/*#__PURE__*/_jsx(HeaderBlockContainer,{children:/*#__PURE__*/_jsx(\"span\",{children:\"Quantity\"})}),/*#__PURE__*/_jsx(HeaderBlockContainer,{children:/*#__PURE__*/_jsx(\"span\",{children:\"Price\"})}),/*#__PURE__*/_jsx(HeaderBlockContainer,{children:/*#__PURE__*/_jsx(\"span\",{children:\"Remove\"})})]}),cartItems.map(function(cartItem){return/*#__PURE__*/_jsx(CheckoutItem,{cartItem:cartItem},cartItem.id);}),/*#__PURE__*/_jsx(TotalContainer,{children:/*#__PURE__*/_jsxs(\"span\",{children:[\"TOTAL : $\",total]})}),/*#__PURE__*/_jsx(StripeCheckoutButton,{price:total})]});};var mapStateToProps=createStructuredSelector({cartItems:selectCartItems,total:selectCartTotal});export default connect(mapStateToProps)(CheckoutPage);","map":{"version":3,"sources":["/home/manish/Development World/React project/crwn-clothing/client/src/pages/checkout/checkout.component.jsx"],"names":["React","connect","createStructuredSelector","CheckoutItem","selectCartItems","selectCartTotal","StripeCheckoutButton","CheckoutHeaderContainer","CheckoutPageContainer","HeaderBlockContainer","TotalContainer","CheckoutPage","cartItems","total","map","cartItem","id","mapStateToProps"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,OAAT,KAAwB,aAAxB,CACA,OAASC,wBAAT,KAAyC,UAAzC,CACA,MAAOC,CAAAA,YAAP,KAAyB,wDAAzB,CACA,OACEC,eADF,CAEEC,eAFF,KAGO,iCAHP,CAIA,MAAOC,CAAAA,oBAAP,KAAiC,wDAAjC,CAEA,OAASC,uBAAT,CAAkCC,qBAAlC,CAAyDC,oBAAzD,CAA+EC,cAA/E,KAAqG,mBAArG,C,wFAEA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,UAAGC,CAAAA,SAAH,MAAGA,SAAH,CAAcC,KAAd,MAAcA,KAAd,oBACnB,MAAC,qBAAD,yBACE,MAAC,uBAAD,yBACE,KAAC,oBAAD,wBACE,iCADF,EADF,cAIE,KAAC,oBAAD,wBACE,qCADF,EAJF,cAOE,KAAC,oBAAD,wBACE,kCADF,EAPF,cAUE,KAAC,oBAAD,wBACE,+BADF,EAVF,cAaE,KAAC,oBAAD,wBACE,gCADF,EAbF,GADF,CAkBGD,SAAS,CAACE,GAAV,CAAc,SAACC,QAAD,qBACb,KAAC,YAAD,EAAgC,QAAQ,CAAEA,QAA1C,EAAmBA,QAAQ,CAACC,EAA5B,CADa,EAAd,CAlBH,cAqBE,KAAC,cAAD,wBACE,oCAAgBH,KAAhB,GADF,EArBF,cAwBE,KAAC,oBAAD,EAAsB,KAAK,CAAEA,KAA7B,EAxBF,GADmB,EAArB,CA6BA,GAAMI,CAAAA,eAAe,CAAGf,wBAAwB,CAAC,CAC/CU,SAAS,CAAER,eADoC,CAE/CS,KAAK,CAAER,eAFwC,CAAD,CAAhD,CAKA,cAAeJ,CAAAA,OAAO,CAACgB,eAAD,CAAP,CAAyBN,YAAzB,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport CheckoutItem from '../../components/Checkout-item/checkout-item.component';\nimport {\n  selectCartItems,\n  selectCartTotal,\n} from '../../redux/cart/cart.selectors';\nimport StripeCheckoutButton from '../../components/stripe-button/stripe-button.component';\n\nimport { CheckoutHeaderContainer, CheckoutPageContainer, HeaderBlockContainer, TotalContainer } from './checkout.styles';\n\nconst CheckoutPage = ({ cartItems, total }) => (\n  <CheckoutPageContainer>\n    <CheckoutHeaderContainer>\n      <HeaderBlockContainer>\n        <span>Product</span>\n      </HeaderBlockContainer>\n      <HeaderBlockContainer>\n        <span>Description</span>\n      </HeaderBlockContainer>\n      <HeaderBlockContainer>\n        <span>Quantity</span>\n      </HeaderBlockContainer>\n      <HeaderBlockContainer>\n        <span>Price</span>\n      </HeaderBlockContainer>\n      <HeaderBlockContainer>\n        <span>Remove</span>\n      </HeaderBlockContainer>\n    </CheckoutHeaderContainer>\n    {cartItems.map((cartItem) => (\n      <CheckoutItem key={cartItem.id} cartItem={cartItem} />\n    ))}\n    <TotalContainer>\n      <span>TOTAL : ${total}</span>\n    </TotalContainer>\n    <StripeCheckoutButton price={total} />\n  </CheckoutPageContainer>\n);\n\nconst mapStateToProps = createStructuredSelector({\n  cartItems: selectCartItems,\n  total: selectCartTotal,\n});\n\nexport default connect(mapStateToProps)(CheckoutPage);\n"]},"metadata":{},"sourceType":"module"}