{"ast":null,"code":"var _jsxFileName = \"/home/manish/Development World/React project/crwn-clothing/src/components/sign-in/sign-in.components.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { Component } from 'react';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/cutom-button.component';\nimport { connect } from 'react-redux';\nimport { SignInContainer, TitleContainer, ButtonsContainer } from './sign-in.styles';\nimport { googleSignInStart, emailSignInStart } from '../../redux/user/user.actions';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SignIn = ({\n  emailSignInStart,\n  googleSignInStart\n}) => {\n  _s();\n\n  const [userInfo, setUserInfo] = useState({\n    email: '',\n    password: ''\n  });\n  const {\n    email,\n    password\n  } = userInfo;\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    emailSignInstart(email, password);\n  };\n\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setUserInfo({ ...userInfo,\n      [name]: value\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(SignInContainer, {\n    children: [/*#__PURE__*/_jsxDEV(TitleContainer, {\n      children: \"I already have an account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"sign in with your email and password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(FormInput, {\n        name: \"email\",\n        type: \"email\",\n        value: email,\n        handleChange: handleChange,\n        label: \"email\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        name: \"password\",\n        type: \"password\",\n        value: password,\n        handleChange: handleChange,\n        label: \"password\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ButtonsContainer, {\n        children: [/*#__PURE__*/_jsxDEV(CustomButton, {\n          type: \"submit\",\n          children: \" SIGN IN \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CustomButton, {\n          type: \"button\",\n          onClick: googleSignInStart,\n          isGoogleSignIn: true,\n          children: \"SIGN IN WITH GOOGLE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SignIn, \"qaAMvTLW/sbxRJBYcXSpg7DTpXU=\");\n\n_c = SignIn;\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart()),\n  emailSignInstart: (email, password) => dispatch(emailSignInStart({\n    email,\n    password\n  }))\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);\n\nvar _c;\n\n$RefreshReg$(_c, \"SignIn\");","map":{"version":3,"sources":["/home/manish/Development World/React project/crwn-clothing/src/components/sign-in/sign-in.components.jsx"],"names":["React","Component","FormInput","CustomButton","connect","SignInContainer","TitleContainer","ButtonsContainer","googleSignInStart","emailSignInStart","useState","SignIn","userInfo","setUserInfo","email","password","handleSubmit","event","preventDefault","emailSignInstart","handleChange","name","value","target","mapDispatchToProps","dispatch"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,oCAAtB;AACA,OAAOC,YAAP,MAAyB,yCAAzB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SACEC,eADF,EAEEC,cAFF,EAGEC,gBAHF,QAIO,kBAJP;AAMA,SACEC,iBADF,EAEEC,gBAFF,QAGO,+BAHP;AAIA,SAASC,QAAT,QAAyB,OAAzB;;;AAEA,MAAMC,MAAM,GAAG,CAAC;AAAEF,EAAAA,gBAAF;AAAoBD,EAAAA;AAApB,CAAD,KAA6C;AAAA;;AAC1D,QAAM,CAACI,QAAD,EAAWC,WAAX,IAA0BH,QAAQ,CAAC;AAAEI,IAAAA,KAAK,EAAE,EAAT;AAAaC,IAAAA,QAAQ,EAAE;AAAvB,GAAD,CAAxC;AAEA,QAAM;AAAED,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAsBH,QAA5B;;AACA,QAAMI,YAAY,GAAG,MAAOC,KAAP,IAAiB;AACpCA,IAAAA,KAAK,CAACC,cAAN;AAEAC,IAAAA,gBAAgB,CAACL,KAAD,EAAQC,QAAR,CAAhB;AACD,GAJD;;AAMA,QAAMK,YAAY,GAAIH,KAAD,IAAW;AAC9B,UAAM;AAAEI,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAkBL,KAAK,CAACM,MAA9B;AACAV,IAAAA,WAAW,CAAC,EAAE,GAAGD,QAAL;AAAe,OAACS,IAAD,GAAQC;AAAvB,KAAD,CAAX;AACD,GAHD;;AAKA,sBACE,QAAC,eAAD;AAAA,4BACE,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAM,MAAA,QAAQ,EAAEN,YAAhB;AAAA,8BACE,QAAC,SAAD;AACE,QAAA,IAAI,EAAC,OADP;AAEE,QAAA,IAAI,EAAC,OAFP;AAGE,QAAA,KAAK,EAAEF,KAHT;AAIE,QAAA,YAAY,EAAEM,YAJhB;AAKE,QAAA,KAAK,EAAC,OALR;AAME,QAAA,QAAQ;AANV;AAAA;AAAA;AAAA;AAAA,cADF,eASE,QAAC,SAAD;AACE,QAAA,IAAI,EAAC,UADP;AAEE,QAAA,IAAI,EAAC,UAFP;AAGE,QAAA,KAAK,EAAEL,QAHT;AAIE,QAAA,YAAY,EAAEK,YAJhB;AAKE,QAAA,KAAK,EAAC,UALR;AAME,QAAA,QAAQ;AANV;AAAA;AAAA;AAAA;AAAA,cATF,eAiBE,QAAC,gBAAD;AAAA,gCACE,QAAC,YAAD;AAAc,UAAA,IAAI,EAAC,QAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,YAAD;AACE,UAAA,IAAI,EAAC,QADP;AAEE,UAAA,OAAO,EAAEZ,iBAFX;AAGE,UAAA,cAAc,MAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAjBF;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkCD,CAjDD;;GAAMG,M;;KAAAA,M;;AAmDN,MAAMa,kBAAkB,GAAIC,QAAD,KAAe;AACxCjB,EAAAA,iBAAiB,EAAE,MAAMiB,QAAQ,CAACjB,iBAAiB,EAAlB,CADO;AAExCW,EAAAA,gBAAgB,EAAE,CAACL,KAAD,EAAQC,QAAR,KAChBU,QAAQ,CAAChB,gBAAgB,CAAC;AAAEK,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAD,CAAjB;AAH8B,CAAf,CAA3B;;AAMA,eAAeX,OAAO,CAAC,IAAD,EAAOoB,kBAAP,CAAP,CAAkCb,MAAlC,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/cutom-button.component';\nimport { connect } from 'react-redux';\n\nimport {\n  SignInContainer,\n  TitleContainer,\n  ButtonsContainer,\n} from './sign-in.styles';\n\nimport {\n  googleSignInStart,\n  emailSignInStart,\n} from '../../redux/user/user.actions';\nimport { useState } from 'react';\n\nconst SignIn = ({ emailSignInStart, googleSignInStart }) => {\n  const [userInfo, setUserInfo] = useState({ email: '', password: '' });\n\n  const { email, password } = userInfo;\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n\n    emailSignInstart(email, password);\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setUserInfo({ ...userInfo, [name]: value });\n  };\n\n  return (\n    <SignInContainer>\n      <TitleContainer>I already have an account</TitleContainer>\n      <span>sign in with your email and password</span>\n      <form onSubmit={handleSubmit}>\n        <FormInput\n          name='email'\n          type='email'\n          value={email}\n          handleChange={handleChange}\n          label='email'\n          required\n        />\n        <FormInput\n          name='password'\n          type='password'\n          value={password}\n          handleChange={handleChange}\n          label='password'\n          required\n        />\n        <ButtonsContainer>\n          <CustomButton type='submit'> SIGN IN </CustomButton>\n          <CustomButton\n            type='button'\n            onClick={googleSignInStart}\n            isGoogleSignIn\n          >\n            SIGN IN WITH GOOGLE\n          </CustomButton>\n        </ButtonsContainer>\n      </form>\n    </SignInContainer>\n  );\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  googleSignInStart: () => dispatch(googleSignInStart()),\n  emailSignInstart: (email, password) =>\n    dispatch(emailSignInStart({ email, password })),\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);\n"]},"metadata":{},"sourceType":"module"}