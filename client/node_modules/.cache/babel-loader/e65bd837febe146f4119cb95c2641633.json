{"ast":null,"code":"import { takeLatest, put, all, call } from '@redux-saga/core/effects';\nimport UserActionTypes from './user.types';\nimport { auth, googleProvider, createUserProfileDocument, getCurrentUser } from '../../firebase/firebase.utlis';\nimport { signInSuccess, signInFailure, signOutSuccess, signOutFailure, signUpFailure, signUpSuccess } from './user.actions';\nexport function* signOut() {\n  try {\n    yield auth.signOut();\n    yield put(signOutSuccess());\n  } catch (error) {\n    yield put(signOutFailure(error));\n  }\n} //  signup execution\n\nexport function* signUpWithEmail({\n  payload: {\n    email,\n    password,\n    displayName\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.createUserWithEmailAndPassword(email, password);\n    yield createUserProfileDocument(user, {\n      displayName\n    });\n    yield put(signUpSuccess(user));\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signUpFailure(error));\n  }\n}\nexport function* getSnapshotFromUserAuth(userAuth) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) return;\n    yield getSnapshotFromUserAuth(userAuth);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* onCheckUserSession() {\n  yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\n}\nexport function* onSignOutStart() {\n  yield takeLatest(UserActionTypes.SIGN_OUT_START, signOut);\n} // new listener for   signup action\n\nexport function* onSignUpStart() {\n  yield takeLatest(UserActionTypes.SIGN_UP_START, signUpWithEmail);\n} // exporting all in one\n\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart), call(onCheckUserSession), call(onSignOutStart), call(onSignUpStart)]);\n}","map":{"version":3,"sources":["/home/manish/Development World/React project/crwn-clothing/src/redux/user/user.sagas.js"],"names":["takeLatest","put","all","call","UserActionTypes","auth","googleProvider","createUserProfileDocument","getCurrentUser","signInSuccess","signInFailure","signOutSuccess","signOutFailure","signUpFailure","signUpSuccess","signOut","error","signUpWithEmail","payload","email","password","displayName","user","createUserWithEmailAndPassword","getSnapshotFromUserAuth","userAuth","userRef","userSnapshot","get","id","data","signInWithGoogle","signInWithPopup","signInWithEmail","signInWithEmailAndPassword","isUserAuthenticated","onGoogleSignInStart","GOOGLE_SIGN_IN_START","onEmailSignInStart","EMAIL_SIGN_IN_START","onCheckUserSession","CHECK_USER_SESSION","onSignOutStart","SIGN_OUT_START","onSignUpStart","SIGN_UP_START","userSagas"],"mappings":"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","sourcesContent":["import { takeLatest, put, all, call } from '@redux-saga/core/effects';\nimport UserActionTypes from './user.types';\nimport {\n  auth,\n  googleProvider,\n  createUserProfileDocument,\n  getCurrentUser,\n} from '../../firebase/firebase.utlis';\n\nimport {\n  signInSuccess,\n  signInFailure,\n  signOutSuccess,\n  signOutFailure,\n  signUpFailure,\n  signUpSuccess,\n} from './user.actions';\n\nexport function* signOut() {\n  try {\n    yield auth.signOut();\n    yield put(signOutSuccess());\n  } catch (error) {\n    yield put(signOutFailure(error));\n  }\n}\n\n//  signup execution\n\nexport function* signUpWithEmail({\n  payload: { email, password, displayName }\n}) {\n  try {\n    const { user } = yield auth.createUserWithEmailAndPassword(email, password);\n    yield createUserProfileDocument(user, { displayName });\n    yield put(signUpSuccess(user));\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signUpFailure(error));\n  }\n}\n\nexport function* getSnapshotFromUserAuth(userAuth) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth);\n    const userSnapshot = yield userRef.get();\n    yield put(\n      signInSuccess({\n        id: userSnapshot.id,\n        ...userSnapshot.data(),\n      })\n    );\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\n\nexport function* signInWithGoogle() {\n  try {\n    const { user } = yield auth.signInWithPopup(googleProvider);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\n\nexport function* signInWithEmail({ payload: { email, password } }) {\n  try {\n    const { user } = yield auth.signInWithEmailAndPassword(email, password);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\n\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) return;\n    yield getSnapshotFromUserAuth(userAuth);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\n\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\n\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\n\nexport function* onCheckUserSession() {\n  yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\n}\n\nexport function* onSignOutStart() {\n  yield takeLatest(UserActionTypes.SIGN_OUT_START, signOut);\n}\n\n// new listener for   signup action\n\nexport function* onSignUpStart() {\n  yield takeLatest(UserActionTypes.SIGN_UP_START, signUpWithEmail);\n}\n\n// exporting all in one\nexport function* userSagas() {\n  yield all([\n    call(onGoogleSignInStart),\n    call(onEmailSignInStart),\n    call(onCheckUserSession),\n    call(onSignOutStart),\n    call(onSignUpStart),\n  ]);\n}\n"]},"metadata":{},"sourceType":"module"}