{"ast":null,"code":"var _jsxFileName = \"/home/manish/Development World/React project/crwn-clothing/src/pages/shop/shop.component.jsx\";\nimport React from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport CollectionsOverview from '../../components/collection-overview/collections-overview.component';\nimport { firestore, convertCollectionsSnapShotToMap } from '../../firebase/firebase.utlis';\nimport CollectionPage from '../collection/collection.component';\nimport { updateCollections } from '../../redux/shop/shop.actions';\nimport WithSpinner from '../../components/with-spinner/with-spinner.components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CollectionOverviewWithSpinner = WithSpinner(CollectionsOverview);\n_c = CollectionOverviewWithSpinner;\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n_c2 = CollectionPageWithSpinner;\n\nclass ShopPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true\n    };\n    this.unsubscribeFromSnapshot = null;\n  }\n\n  componentDidMount() {\n    const {\n      updateCollections\n    } = this.props;\n    const collectionRef = firestore.collection('collections');\n    this.unsubscribeFromSnapshot = collectionRef.onSnapshot(async snapShot => {\n      const collectionsMap = convertCollectionsSnapShotToMap(snapShot);\n      updateCollections(collectionsMap);\n      this.setState({\n        loading: false\n      });\n    });\n  }\n\n  render() {\n    const {\n      match\n    } = this.props;\n    const {\n      loading\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"shop-page\",\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: `${match.path}`,\n        render: props => {\n          /*#__PURE__*/\n          _jsxDEV(CollectionOverviewWithSpinner, {\n            isLoading: loading,\n            ...props\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: `${match.path}/:collectionId`,\n        render: props => {\n          /*#__PURE__*/\n          _jsxDEV(CollectionOverviewWithSpinner, {\n            isLoading: loading,\n            ...props\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CollectionOverviewWithSpinner\");\n$RefreshReg$(_c2, \"CollectionPageWithSpinner\");","map":{"version":3,"sources":["/home/manish/Development World/React project/crwn-clothing/src/pages/shop/shop.component.jsx"],"names":["React","Route","connect","CollectionsOverview","firestore","convertCollectionsSnapShotToMap","CollectionPage","updateCollections","WithSpinner","CollectionOverviewWithSpinner","CollectionPageWithSpinner","ShopPage","Component","state","loading","unsubscribeFromSnapshot","componentDidMount","props","collectionRef","collection","onSnapshot","snapShot","collectionsMap","setState","render","match","path","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,mBAAP,MAAgC,qEAAhC;AACA,SACEC,SADF,EAEEC,+BAFF,QAGO,+BAHP;AAIA,OAAOC,cAAP,MAA2B,oCAA3B;AACA,SAASC,iBAAT,QAAkC,+BAAlC;AACA,OAAOC,WAAP,MAAwB,uDAAxB;;AAEA,MAAMC,6BAA6B,GAAGD,WAAW,CAACL,mBAAD,CAAjD;KAAMM,6B;AACN,MAAMC,yBAAyB,GAAGF,WAAW,CAACF,cAAD,CAA7C;MAAMI,yB;;AAEN,MAAMC,QAAN,SAAuBX,KAAK,CAACY,SAA7B,CAAuC;AAAA;AAAA;AAAA,SACrCC,KADqC,GAC7B;AACNC,MAAAA,OAAO,EAAE;AADH,KAD6B;AAAA,SAIrCC,uBAJqC,GAIX,IAJW;AAAA;;AAKrCC,EAAAA,iBAAiB,GAAG;AAClB,UAAM;AAAET,MAAAA;AAAF,QAAwB,KAAKU,KAAnC;AACA,UAAMC,aAAa,GAAGd,SAAS,CAACe,UAAV,CAAqB,aAArB,CAAtB;AACA,SAAKJ,uBAAL,GAA+BG,aAAa,CAACE,UAAd,CAC7B,MAAOC,QAAP,IAAoB;AAClB,YAAMC,cAAc,GAAGjB,+BAA+B,CAACgB,QAAD,CAAtD;AACAd,MAAAA,iBAAiB,CAACe,cAAD,CAAjB;AACA,WAAKC,QAAL,CAAc;AAAET,QAAAA,OAAO,EAAE;AAAX,OAAd;AACD,KAL4B,CAA/B;AAOD;;AAEDU,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAY,KAAKR,KAAvB;AACA,UAAM;AAAEH,MAAAA;AAAF,QAAc,KAAKG,KAAzB;AAEA,wBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACE,QAAC,KAAD;AACE,QAAA,KAAK,MADP;AAEE,QAAA,IAAI,EAAG,GAAEQ,KAAK,CAACC,IAAK,EAFtB;AAGE,QAAA,MAAM,EAAGT,KAAD,IAAW;AACjB;AAAA,kBAAC,6BAAD;AAA+B,YAAA,SAAS,EAAEH,OAA1C;AAAA,eAAuDG;AAAvD;AAAA;AAAA;AAAA;AAAA;AACD;AALH;AAAA;AAAA;AAAA;AAAA,cADF,eAQE,QAAC,KAAD;AACE,QAAA,IAAI,EAAG,GAAEQ,KAAK,CAACC,IAAK,gBADtB;AAEE,QAAA,MAAM,EAAGT,KAAD,IAAW;AACjB;AAAA,kBAAC,6BAAD;AAA+B,YAAA,SAAS,EAAEH,OAA1C;AAAA,eAAuDG;AAAvD;AAAA;AAAA;AAAA;AAAA;AACD;AAJH;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAiBD;;AAtCoC;;AAyCvC,MAAMU,kBAAkB,GAAIC,QAAD,KAAe;AACxCrB,EAAAA,iBAAiB,EAAGe,cAAD,IACjBM,QAAQ,CAACrB,iBAAiB,CAACe,cAAD,CAAlB;AAF8B,CAAf,CAA3B;;AAKA,eAAepB,OAAO,CAAC,IAAD,EAAOyB,kBAAP,CAAP,CAAkChB,QAAlC,CAAf","sourcesContent":["import React from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport CollectionsOverview from '../../components/collection-overview/collections-overview.component';\nimport {\n  firestore,\n  convertCollectionsSnapShotToMap,\n} from '../../firebase/firebase.utlis';\nimport CollectionPage from '../collection/collection.component';\nimport { updateCollections } from '../../redux/shop/shop.actions';\nimport WithSpinner from '../../components/with-spinner/with-spinner.components';\n\nconst CollectionOverviewWithSpinner = WithSpinner(CollectionsOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends React.Component {\n  state = {\n    loading: true,\n  };\n  unsubscribeFromSnapshot = null;\n  componentDidMount() {\n    const { updateCollections } = this.props;\n    const collectionRef = firestore.collection('collections');\n    this.unsubscribeFromSnapshot = collectionRef.onSnapshot(\n      async (snapShot) => {\n        const collectionsMap = convertCollectionsSnapShotToMap(snapShot);\n        updateCollections(collectionsMap);\n        this.setState({ loading: false });\n      }\n    );\n  }\n\n  render() {\n    const { match } = this.props;\n    const { loading } = this.props;\n\n    return (\n      <div className='shop-page'>\n        <Route\n          exact\n          path={`${match.path}`}\n          render={(props) => {\n            <CollectionOverviewWithSpinner isLoading={loading} {...props} />;\n          }}\n        />\n        <Route\n          path={`${match.path}/:collectionId`}\n          render={(props) => {\n            <CollectionOverviewWithSpinner isLoading={loading} {...props} />;\n          }}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  updateCollections: (collectionsMap) =>\n    dispatch(updateCollections(collectionsMap)),\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);\n"]},"metadata":{},"sourceType":"module"}